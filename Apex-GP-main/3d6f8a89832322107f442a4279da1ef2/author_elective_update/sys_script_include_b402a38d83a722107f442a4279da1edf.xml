<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_apex_gp.GeminiChurnHelper</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>GeminiChurnHelper</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var GeminiChurnHelper = Class.create();
GeminiChurnHelper.prototype = {
    initialize: function () {},

    analyzeUser: function (userId) {
        try {
            // Step 1: Gather all usage records for this user
            var usageData = [];
            var gr = new GlideRecordSecure("x_snc_apex_gp_usage_pattern");
            gr.addQuery("user_id", userId);
            gr.orderBy("timestamp");
            gr.query();
            while (gr.next()) {
                usageData.push({
                    "login_frequency_count": gr.login_frequency_count + "",
                    "time_spent": gr.time_spent.getDisplayValue(),
                    "ticket_resolution_time": gr.ticket_resolution_time.getDisplayValue(),
                    "no_of_support_tickets": gr.no_of_support_tickets + "",
                    "subscription": gr.subscription + "",
                    "communication": gr.communication + "",
                    "rating": gr.rating + "",
                    "cancellation_or_refund_requests": gr.cancellation_or_refund_requests + "",
                    "feedback": gr.feedback + ""
                });
            }

            if (usageData.length === 0) {
                gs.warn("No usage data found for user: " + userId);
                return;
            }

            // Step 2: Call Gemini REST Message
            var r = new sn_ws.RESTMessageV2('gemini', 'postdatatoai');
            r.setStringParameterNoEscape('usage_data', JSON.stringify(usageData)); // ✅ fixed

            var response = r.execute();
            var httpStatus = response.getStatusCode();
            var responseBody = response.getBody();

            gs.info("Gemini API call status: " + httpStatus);
            gs.info("Gemini Response: " + responseBody);

            if (httpStatus != 200) {
                gs.error("Gemini API failed. Status: " + httpStatus + " Body: " + responseBody);
                return;
            }

            var parsed = JSON.parse(responseBody);

            // Step 3: Extract AI JSON result safely
            var text = "";
            if (parsed.candidates &&
                parsed.candidates[0].content.parts &&
                parsed.candidates[0].content.parts[0].text) {
                text = parsed.candidates[0].content.parts[0].text;
            } else {
                gs.error("Gemini did not return expected JSON text. Full response: " + responseBody);
                return;
            }

            // Remove possible markdown wrappers like ```json
            text = text.replace(/```json|```/g, "").trim();

            var aiResult = JSON.parse(text);

            // Step 4: Insert into Churn Risk Analysis table
            var risk = new GlideRecord("x_snc_apex_gp_churn_risk_analysis");
            risk.initialize();
            risk.user_id = userId;
            risk.risk_score = aiResult.risk_score;
            risk.risk_level = aiResult.risk_level;
            risk.detected_risk_area = aiResult.detected_risk_area;
            risk.contributing_factors = aiResult.contributing_factors;
            risk.sentiment_analysis = aiResult.sentiment_analysis;
            risk.intervention_required = aiResult.intervention_required;
            risk.intervention_status = aiResult.intervention_status;
            risk.last_evaluated = new GlideDateTime();
            risk.insert();

            gs.info("Churn risk record created for user: " + userId);

        } catch (ex) {
            gs.error("GeminiChurnHelper.analyzeUser failed: " + ex.message);
        }
    },

    type: 'GeminiChurnHelper'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-22 15:43:41</sys_created_on>
        <sys_id>b402a38d83a722107f442a4279da1edf</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>GeminiChurnHelper</sys_name>
        <sys_package display_value="Apex GP" source="x_snc_apex_gp">3d6f8a89832322107f442a4279da1ef2</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Apex GP">3d6f8a89832322107f442a4279da1ef2</sys_scope>
        <sys_update_name>sys_script_include_b402a38d83a722107f442a4279da1edf</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-08-22 16:11:58</sys_updated_on>
    </sys_script_include>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Apex GP">3d6f8a89832322107f442a4279da1ef2</application>
        <file_path/>
        <instance_id>32a90151979f66905382ff671153afd8</instance_id>
        <instance_name>mav-aug-7844-0002</instance_name>
        <name>sys_script_include_b402a38d83a722107f442a4279da1edf</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_snc_apex_gp.GeminiChurnHelper&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;mobile_callable&gt;false&lt;/mobile_callable&gt;&lt;name&gt;GeminiChurnHelper&lt;/name&gt;&lt;sandbox_callable&gt;false&lt;/sandbox_callable&gt;&lt;script&gt;&lt;![CDATA[var GeminiChurnHelper = Class.create();
GeminiChurnHelper.prototype = {
    initialize: function () {},

    analyzeUser: function (userId) {
        try {
            // Step 1: Gather all usage records for this user
            var usageData = [];
            var gr = new GlideRecordSecure("x_snc_apex_gp_usage_pattern");
            gr.addQuery("user_id", userId);
            gr.orderBy("timestamp");
            gr.query();
            while (gr.next()) {
                usageData.push({
                    "login_frequency_count": gr.login_frequency_count + "",
                    "time_spent": gr.time_spent.getDisplayValue(),
                    "ticket_resolution_time": gr.ticket_resolution_time.getDisplayValue(),
                    "no_of_support_tickets": gr.no_of_support_tickets + "",
                    "subscription": gr.subscription + "",
                    "communication": gr.communication + "",
                    "rating": gr.rating + "",
                    "cancellation_or_refund_requests": gr.cancellation_or_refund_requests + "",
                    "feedback": gr.feedback + ""
                });
            }

            if (usageData.length === 0) {
                gs.warn("No usage data found for user: " + userId);
                return;
            }

            // Step 2: Call Gemini REST Message
            var r = new sn_ws.RESTMessageV2('gemini', 'postdatatoai');
            r.setStringParameterNoEscape('usage_data', JSON.stringify(usageData)); // ✅ fixed

            var response = r.execute();
            var httpStatus = response.getStatusCode();
            var responseBody = response.getBody();

            gs.info("Gemini API call status: " + httpStatus);
            gs.info("Gemini Response: " + responseBody);

            if (httpStatus != 200) {
                gs.error("Gemini API failed. Status: " + httpStatus + " Body: " + responseBody);
                return;
            }

            var parsed = JSON.parse(responseBody);

            // Step 3: Extract AI JSON result safely
            var text = "";
            if (parsed.candidates &amp;&amp;
                parsed.candidates[0].content.parts &amp;&amp;
                parsed.candidates[0].content.parts[0].text) {
                text = parsed.candidates[0].content.parts[0].text;
            } else {
                gs.error("Gemini did not return expected JSON text. Full response: " + responseBody);
                return;
            }

            // Remove possible markdown wrappers like ```json
            text = text.replace(/```json|```/g, "").trim();

            var aiResult = JSON.parse(text);

            // Step 4: Insert into Churn Risk Analysis table
            var risk = new GlideRecord("x_snc_apex_gp_churn_risk_analysis");
            risk.initialize();
            risk.user_id = userId;
            risk.risk_score = aiResult.risk_score;
            risk.risk_level = aiResult.risk_level;
            risk.detected_risk_area = aiResult.detected_risk_area;
            risk.contributing_factors = aiResult.contributing_factors;
            risk.sentiment_analysis = aiResult.sentiment_analysis;
            risk.intervention_required = aiResult.intervention_required;
            risk.intervention_status = aiResult.intervention_status;
            risk.last_evaluated = new GlideDateTime();
            risk.insert();

            gs.info("Churn risk record created for user: " + userId);

        } catch (ex) {
            gs.error("GeminiChurnHelper.analyzeUser failed: " + ex.message);
        }
    },

    type: 'GeminiChurnHelper'
};
]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2025-08-22 15:43:41&lt;/sys_created_on&gt;&lt;sys_id&gt;b402a38d83a722107f442a4279da1edf&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;GeminiChurnHelper&lt;/sys_name&gt;&lt;sys_package display_value="Apex GP" source="x_snc_apex_gp"&gt;3d6f8a89832322107f442a4279da1ef2&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Apex GP"&gt;3d6f8a89832322107f442a4279da1ef2&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_b402a38d83a722107f442a4279da1edf&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2025-08-22 16:11:58&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-370804218</payload_hash>
        <record_name>GeminiChurnHelper</record_name>
        <reverted_from/>
        <source>756f8a89832322107f442a4279da1ef7</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-22 16:11:58</sys_created_on>
        <sys_id>035b2b4983e722107f442a4279da1e69</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>198d28d183a0000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-08-22 16:11:58</sys_updated_on>
        <type>Script Include</type>
        <update_guid>0b5b2b49b9e7221073a20f0d86b25568</update_guid>
        <update_guid_history>0b5b2b49b9e7221073a20f0d86b25568:-370804218,c24767c1f6e72210e4b2a029f3b2d6fb:2108340721,b0e46b4187e722108c7920188184ba58:-1619600352</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-22 16:14:38</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>01617cfe5bc44b9e8114d91a2d315124</sys_id>
        <sys_metadata>b402a38d83a722107f442a4279da1edf</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>GeminiChurnHelper</sys_name>
        <sys_package display_value="Apex GP" source="x_snc_apex_gp">3d6f8a89832322107f442a4279da1ef2</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Apex GP">3d6f8a89832322107f442a4279da1ef2</sys_scope>
        <sys_scope_delete display_value="">5f06b0670963483b9b5c9aa046987891</sys_scope_delete>
        <sys_update_name>sys_script_include_b402a38d83a722107f442a4279da1edf</sys_update_name>
        <sys_update_version display_value="sys_script_include_b402a38d83a722107f442a4279da1edf">035b2b4983e722107f442a4279da1e69</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-08-22 16:14:38</sys_updated_on>
    </sys_metadata_delete>
</record_update>
